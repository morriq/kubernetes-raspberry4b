---
# https://devopscube.com/kubernetes-kubeconfig-file/
# https://stackoverflow.com/questions/59062716/limit-listed-kubernetes-namespaces-by-access
# https://octopus.com/blog/k8s-rbac-roles-and-bindings

- name: create namespace
  kubernetes.core.k8s:
    kubeconfig: /.kube/config
    apply: yes
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{sample_app_name}}'

- name: create serviceaccount
  ignore_errors: yes
  environment:
    KUBECONFIG: /.kube/config
  shell: |
    kubectl create serviceaccount -n {{sample_app_name}} github

- name: create secret
  kubernetes.core.k8s:
    kubeconfig: /.kube/config
    apply: yes
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: github
        namespace: '{{sample_app_name}}'
        annotations:
          kubernetes.io/service-account.name: github
      type: kubernetes.io/service-account-token

- name: create role
  kubernetes.core.k8s:
    kubeconfig: /.kube/config
    apply: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: github
        namespace: '{{sample_app_name}}'
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - '*'

- name: create role binding
  kubernetes.core.k8s:
    kubeconfig: /.kube/config
    apply: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: github-bindings
        namespace: '{{sample_app_name}}'
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: github
      subjects:
      - kind: ServiceAccount
        name: github
        namespace: '{{sample_app_name}}'

- name: create ghcr secret (delete if exists)
  environment:
    KUBECONFIG: /.kube/config
  shell: kubectl delete secret ghcr --ignore-not-found

- name: create ghcr secret
  environment:
    KUBECONFIG: /.kube/config
  shell: |
    kubectl create secret docker-registry ghcr --docker-server=ghcr.io --docker-username={{ghcr_username}} --docker-password={{ghcr_password}} --docker-email={{ghcr_email}} -n {{sample_app_name}}
