---
- name: create serviceaccount external-dns
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: external-dns
        namespace: default

- name: create clusterrole external-dns
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: external-dns
        namespace: default
      rules:
        - apiGroups: ['']
          resources: ['services', 'endpoints', 'pods']
          verbs: ['get', 'watch', 'list']
        - apiGroups: ['extensions', 'networking.k8s.io']
          resources: ['ingresses']
          verbs: ['get', 'watch', 'list']
        - apiGroups: ['']
          resources: ['nodes']
          verbs: ['list', 'watch']

- name: create clusterrolebinding external-dns
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: external-dns-viewer
        namespace: default
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: external-dns
      subjects:
        - kind: ServiceAccount
          name: external-dns
          namespace: default

- name: create externalsecret external-dns
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: cloudflare-secret
        namespace: default
      spec:
        refreshInterval: 48h
        secretStoreRef:
          name: secretstore-sample
          kind: SecretStore
        target:
          name: cloudflare-secret
          creationPolicy: Owner
        data:
          - secretKey: CF_API_TOKEN
            remoteRef:
              key: home-cluster
              property: {{amazon_sm_secret_key}}

- name: create deployment external-dns
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: external-dns
        namespace: default
      spec:
        strategy:
          type: Recreate
        selector:
          matchLabels:
            app: external-dns
        template:
          metadata:
            labels:
              app: external-dns
          spec:
            serviceAccountName: external-dns
            containers:
              - name: external-dns
                image: k8s.gcr.io/external-dns/external-dns:v0.14.0
                args:
                  - --log-level=warning
                  - --source=ingress # service is also possible
                  - --provider=cloudflare
                  # - --domain-filter=domain.com,next.com
                  - --cloudflare-proxied # (optional) enable the proxy feature of Cloudflare (DDOS protection, CDN...)
                envFrom:
                  - secretRef:
                      name: cloudflare-secret
